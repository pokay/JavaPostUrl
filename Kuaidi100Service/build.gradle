buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url 'http://nexus.yintai.org:8081/nexus/content/groups/public' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath('net.researchgate:gradle-release:2.3.4')
    }
}

group = 'yintai'

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'docker'
apply plugin: 'net.researchgate.release'

jar {
    baseName = 'kuaidi100-service'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, compileGroovy, compileTestGroovy]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    maven { url 'http://nexus.yintai.org:8081/nexus/content/groups/public' }
    mavenCentral()
}

dependencies {
    compile('org.codehaus.groovy:groovy')
    compile('org.springframework.boot:spring-boot-starter-jetty')
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    //TODO Do not need h2 runtime in product environment.
    compile("org.jadira.usertype:usertype.core:4.0.0.GA") {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    compile(group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2')
    runtime('com.h2database:h2:1.4.190')
    runtime('org.postgresql:postgresql:9.4-1201-jdbc4')
    compile('org.nofdev:service-host-mvc:1.1.1')
    compile('org.nofdev:service-client-java:1.1.0')
    //compile(group = 'org.codehaus.groovy.modules.http-builder', module = 'http-builder', version = '0.5.0')
    testCompile(
        'org.springframework.boot:spring-boot-starter-test',
        'org.spockframework:spock-core:1.0-groovy-2.4',
        'org.spockframework:spock-spring:1.0-groovy-2.4'
    )
    testCompile('org.mock-server:mockserver-netty:3.10.2')
    compile('net.logstash.logback:logstash-logback-encoder:4.5.1')
    compile (group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.9')
// https://mvnrepository.com/artifact/commons-httpclient/commons-httpclient
    //compile group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
    compile group: 'org.lucee', name: 'commons-httpclient', version: '3.1'
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.3')

}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')

    doFirst {
        copy {
            from (jar) {
                include "*${version}.jar"
                rename "(.*)-${version}(.*)", 'app.jar'
            }
            into stageDir
        }
    }
}

release {
    git {
        requireBranch = 'develop'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
    }
}
afterReleaseBuild.dependsOn buildDocker